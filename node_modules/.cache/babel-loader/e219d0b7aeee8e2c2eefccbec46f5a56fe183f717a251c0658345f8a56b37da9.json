{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\animi\\\\Downloads\\\\To-do-List-main\\\\To-do-List-main\\\\src\\\\Modals\\\\EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskPopup = ({\n  modal,\n  toggle,\n  updateTask,\n  taskObj\n}) => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [isImportant, setIsImportant] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n    setDate(taskObj.Date);\n    setIsImportant(taskObj.IsImportant);\n    setIsCompleted(taskObj.IsCompleted);\n  }, [taskObj, taskObj.Name, taskObj.Description, taskObj.Date, taskObj.IsImportant, taskObj.IsCompleted]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      if (name === 'isImportant') {\n        setIsImportant(checked);\n      } else if (name === 'isCompleted') {\n        setIsCompleted(checked);\n      }\n    } else {\n      if (name === 'taskName') {\n        setTaskName(value);\n      } else if (name === 'description') {\n        setDescription(value);\n      } else if (name === 'date') {\n        setDate(value);\n      }\n    }\n  };\n  const handleUpdate = e => {\n    e.preventDefault();\n    let updatedTask = {\n      ...taskObj,\n      Name: taskName,\n      Description: description,\n      Date: date,\n      IsImportant: isImportant,\n      IsCompleted: isCompleted\n    };\n    updateTask(updatedTask);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: handleChange,\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: isImportant,\n          onChange: handleChange,\n          name: \"isImportant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Mark as Important\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: isCompleted,\n          onChange: handleChange,\n          name: \"isCompleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskPopup, \"2tVmKuzGckoVT3Bk5LfjC1qTjeQ=\");\n_c = EditTaskPopup;\nexport default EditTaskPopup;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","jsxDEV","_jsxDEV","EditTaskPopup","modal","toggle","updateTask","taskObj","_s","taskName","setTaskName","description","setDescription","date","setDate","isImportant","setIsImportant","isCompleted","setIsCompleted","Name","Description","Date","IsImportant","IsCompleted","handleChange","e","name","value","type","checked","target","handleUpdate","preventDefault","updatedTask","isOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","rows","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/animi/Downloads/To-do-List-main/To-do-List-main/src/Modals/EditTask.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [isImportant, setIsImportant] = useState(false);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name);\r\n        setDescription(taskObj.Description);\r\n        setDate(taskObj.Date);\r\n        setIsImportant(taskObj.IsImportant);\r\n        setIsCompleted(taskObj.IsCompleted);\r\n    }, [taskObj, taskObj.Name, taskObj.Description, taskObj.Date, taskObj.IsImportant, taskObj.IsCompleted]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n\r\n        if (type === 'checkbox') {\r\n            if (name === 'isImportant') {\r\n                setIsImportant(checked);\r\n            } else if (name === 'isCompleted') {\r\n                setIsCompleted(checked);\r\n            }\r\n        } else {\r\n            if (name === 'taskName') {\r\n                setTaskName(value);\r\n            } else if (name === 'description') {\r\n                setDescription(value);\r\n            } else if (name === 'date') {\r\n                setDate(value);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let updatedTask = {\r\n            ...taskObj,\r\n            Name: taskName,\r\n            Description: description,\r\n            Date: date,\r\n            IsImportant: isImportant,\r\n            IsCompleted: isCompleted,\r\n        };\r\n        updateTask(updatedTask);\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"form-group\">\r\n                    <label>Task Name</label>\r\n                    <input type=\"text\" className=\"form-control\" value={taskName} onChange={handleChange} name=\"taskName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea rows=\"5\" className=\"form-control\" value={description} onChange={handleChange} name=\"description\"></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" className=\"form-control\" value={date} onChange={handleChange} name=\"date\" />\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" checked={isImportant} onChange={handleChange} name=\"isImportant\" />\r\n                    <label className=\"form-check-label\">Mark as Important</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input type=\"checkbox\" className=\"form-check-input\" checked={isCompleted} onChange={handleChange} name=\"isCompleted\" />\r\n                    <label className=\"form-check-label\">Mark as Completed</label>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}